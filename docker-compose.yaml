version: "3.4"
networks:
  public:
  catalog:
  iam: 
  invoicing:
  backend: 
  cache: 
volumes:
   kafka:
   zookeeper_data:
   redis: 
services:
  iam: 
    build: 
      context: ./../iam
      dockerfile: ./Dockerfile
    volumes:
      - "./../iam:/app"
    networks:
      - public
      - iam
  api-gateway: 
    build: 
      context: ./../api-gateway
      dockerfile: ./Dockerfile
    volumes:
      - "./../api-gateway:/app"
    networks:
      - public
    ports: 
      - 3000:3000
    environment:
      CATALOG_MICROSERVICE_HOST: catalog
  catalog: 
    build: 
      context: ./../catalog
      dockerfile: ./Dockerfile
    networks:
      - public
      - catalog
    volumes:
      - "./../catalog:/app"
  catalog-db: 
    image: mongo:latest
    networks: 
      - catalog
    environment: 
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
  kafka:
    image: bitnami/kafka:latest
    networks:
      - backend
    volumes:
      - kafka:/bitnami/kafka
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    networks:
      - backend
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8085:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=localhost:2181
    networks:
      - backend
      - public
  invoicing:
      build:
          context: ./../invoicing/vendor/laravel/sail/runtimes/8.1
          dockerfile: Dockerfile
          args:
            WWWGROUP: '1001'
      image: invoicing-8.1/app
      extra_hosts:
          - 'host.docker.internal:host-gateway'
      environment:
          WWWUSER: '1001'
          LARAVEL_SAIL: 1
      volumes:
          - '../invoicing:/var/www/html'
      networks:
          - public
          - invoicing
          - cache
  redis:
    image: 'redis:alpine'
    ports:
        - '${FORWARD_REDIS_PORT:-6379}:6379'
    volumes:
        - 'redis:/data'
    networks:
        - cache
    healthcheck:
        test: ["CMD", "redis-cli", "ping"]
        retries: 3
        timeout: 5s
  loki:
    image: grafana/loki:2.6.1
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - public
  promtail:
    image: grafana/promtail:2.6.1
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      - public
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3005:3000"
    networks:
      - public